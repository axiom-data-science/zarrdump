stages:
  - test
  - build-image
  - scan
  - badge
  - push

variables:
  PROJ: "zarrdump"
  IMAGE: $PROJ:$CI_COMMIT_REF_NAME
  TEST_IMAGE: $PROJ-test:$CI_COMMIT_REF_NAME
  AXIOM_LATEST: registry.axiom/$PROJ:latest
  AXIOM_TAG: registry.axiom/$PROJ:$CI_COMMIT_TAG
  RUST_IMAGE: rust:1.86.0-slim
  DOCKER_BUILDKIT: 1

build_image:
  stage: build-image
  script:
    - docker build $BUILDOPTS -t $IMAGE .

clippy:
  image: $RUST_IMAGE
  stage: test
  script:
    - rustup component add clippy
    - cargo clippy -- -Dwarnings

test:
  image: $RUST_IMAGE
  stage: test
  script:
    - cargo test

push:
  stage: push
  only:
    - main
  script:
    - docker tag $IMAGE $AXIOM_LATEST
    - docker push $AXIOM_LATEST

push_tag:
  stage: push
  only:
    - tags
  script:
    - docker tag $IMAGE $AXIOM_TAG
    - docker push $AXIOM_TAG

trivy_scan:
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  stage: scan
  script:
    - trivy image --format json --output trivy-report.json $IMAGE
  artifacts:
    paths:
      - trivy-report.json

build_audit:
  image: $RUST_IMAGE
  stage: scan
  allow_failure: true
  script:
    - cargo install cargo-audit
    - cargo build
    - cargo audit --json > cargo-audit.json
  artifacts:
    paths:
      - cargo-audit.json

badger-cargo-audit:
  image:
    name: registry.axiom/security-badger:latest
    entrypoint: [""]
  stage: badge
  script:
    - security-badger --svg cargo-audit.svg --label 'Cargo Audit' cargo-audit.json
  artifacts:
    paths:
      - cargo-audit.svg

badger-trivy:
  image:
    name: registry.axiom/security-badger:latest
    entrypoint: [""]
  stage: badge
  script:
    - security-badger --svg trivy-audit.svg --label 'Trivy' trivy-report.json
  artifacts:
    paths:
      - trivy-audit.svg
